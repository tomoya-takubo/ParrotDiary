/* components/CollectionPreview/styles.module.css */
/* 既存のスタイルと新しいスタイルを統合したもの */

.container {
  padding: 1.5rem;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  background: linear-gradient(to bottom, #EFF6FF, #F5F3FF); /* 背景グラデーションをコンテナに */
  min-height: 100vh; /* 最低でも画面の高さ分は確保 */
}

/* タイトルセクション - ダッシュボードボタン用に変更 */
.titleSection {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
  gap: 1rem;
}

.title {
  font-size: 1.5rem;
  font-weight: bold;
  margin: 0;
}

.backToDashboardButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background-color: #3B82F6;
  color: white;
  border: none;
  border-radius: 0.375rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;
}

.backToDashboardButton:hover {
  background-color: #2563EB;
  transform: translateY(-1px);
}

.categories {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.filterIcon {
  color: #6B7280;
}

.categoryButton {
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  background: white;
  border: none;
  cursor: pointer;
  font-size: 0.875rem;
  color: #4B5563;
  white-space: nowrap;
}

.categoryButton:hover {
  background: #F3F4F6;
}

.categoryButton.active {
  background: #8B5CF6;
  color: white;
}

.grid {
  display: grid;
  gap: 1rem;
  width: 100%;
  justify-content: center;
  margin: 0 auto;
  padding: 0;
  /* 基本サイズを180pxに拡大 */
  grid-template-columns: repeat(auto-fit, 180px);
}

.parrotCard {
  background: white;
  border-radius: 0.75rem;
  padding: 1rem;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  width: 180px;  /* カードの幅を180pxに拡大 */
  position: relative; /* .lockOverlay 用 */
  transition: transform 0.2s ease, opacity 0.2s ease;
}

.parrotCard:hover {
  transform: translateY(-2px);
}

.iconWrapper {
  position: relative;
  width: 100%;
  aspect-ratio: 1;
  background: #f3f4f6;
  border-radius: 0.5rem;
  padding: 0.5rem;  /* パディングを小さく */
  margin-bottom: 0.5rem;  /* マージンも調整 */
}

.parrotName {
  text-align: center;
  font-weight: 500;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  align-items: center;
  font-size: 0.875rem;
  word-break: break-word;      /* 任意の位置で改行可能に */
  overflow-wrap: break-word;   /* 長い単語を折り返す */
  max-width: 100%;            /* 親要素の幅を超えないように */
  padding: 0 0.25rem;         /* 左右に少しパディングを追加 */
}

/* パロットの名前用のスタイルを追加 */
.parrotNameText {
  display: inline-block;
  white-space: normal;
}

/* "parrot"の前で改行を強制 */
.parrotNameText::before {
  content: "parrot";
  float: right;
  width: 0;
  height: 0;
  overflow: hidden;
}

.rarityBadge {
  padding: 0.25rem 0.75rem;
  border-radius: 9999px;
  font-size: 0.75rem;
  color: white;
}

.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 50;
}

.modalContent {
  background: white;
  border-radius: 1rem;
  padding: 2rem;
  width: 90%;
  max-width: 500px;
  position: relative;
}

.closeButton {
  position: absolute;
  top: 1rem;
  right: 1rem;
  font-size: 1.5rem;
  background: none;
  border: none;
  cursor: pointer;
  color: #666;
}

.modalHeader {
  display: flex;
  gap: 1.5rem;
  margin-bottom: 1.5rem;
}

.modalIconWrapper {
  width: 100px;
  height: 100px;
}

.modalInfo {
  flex: 1;
}

.modalTitle {
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 0.5rem;
}

.description {
  color: #374151;  /* テキストの色を濃く */
  margin-bottom: 1.5rem;
  line-height: 1.6;  /* 行間を広げて読みやすく */
  font-size: 0.95rem;
}

.detailsSection {
  background: #f8f9fa;  /* 完全な不透明な背景に */
  border: 1px solid #e5e7eb;  /* 境界線を追加 */
  padding: 1rem;
  border-radius: 0.5rem;
}

.detailsSection h3 {
  margin-bottom: 1rem;
  font-size: 1.1rem;
  font-weight: bold;
}

.detailRow {
  display: flex;
  justify-content: space-between;
  padding: 0.5rem 0;
  border-bottom: 1px solid #eee;
}

.detailRow:last-child {
  border-bottom: none;
}

.notObtained {
  color: #666;
  font-style: italic;
}

/* 獲得済みパロットの場合のみホバー効果とポインターカーソルを適用 */
.parrotCard.obtained {
  cursor: pointer;
}

.parrotCard.obtained:hover {
  transform: translateY(-2px);
}

.parrotCard:not(.obtained):hover {
  cursor: not-allowed;
  opacity: 0.7;
  transition: opacity 0.2s;
}

.progressInfo {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.progressLabel {
  color: #6B7280;
  font-size: 0.875rem;
  margin-bottom: 0.25rem;
}

.progressValue {
  font-size: 1.25rem;
  font-weight: bold;
}

.progressPercentage {
  margin-left: 0.5rem;
  color: #8B5CF6;
}

.nextGoal {
  color: #6B7280;
  font-size: 0.875rem;
}

.progressBarContainer {
  height: 0.5rem;
  background: #E5E7EB;
  border-radius: 9999px;
  overflow: hidden;
}

.progressBar {
  height: 100%;
  background: #8B5CF6;
  border-radius: 9999px;
  transition: width 0.3s ease;
}

.searchBox {
  position: relative;
  width: 300px;
}

.searchIcon {
  position: absolute;
  left: 0.75rem;
  top: 50%;
  transform: translateY(-50%);
  color: #9CA3AF;
}

.searchInput {
  width: 100%;
  padding: 0.5rem 1rem 0.5rem 2.5rem;
  border: 1px solid #E5E7EB;
  border-radius: 0.5rem;
  background: white;
  font-size: 0.875rem;
}

.searchInput:focus {
  outline: none;
  border-color: #8B5CF6;
  box-shadow: 0 0 0 2px rgba(139, 92, 246, 0.1);
}

/* CollectionPreview.module.css のスタイルを修正 */
.filterSection {
  margin: 1.5rem 0;
}

.filterHeader {
  display: flex;
  gap: 1rem;
  align-items: center;
  margin-bottom: 1rem;
  flex-wrap: wrap;
}

.searchBox {
  flex: 1;  /* 検索ボックスを可能な限り広げる */
  max-width: 300px;
}

.categories {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-left: auto;  /* 右寄せにする */
}

.progressSection {
  background: white;
  border-radius: 0.75rem;
  padding: 1.5rem;
  margin-top: 1rem;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  width: 100%;
}

.rarityFilter {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.rarityButton {
  padding: 0.25rem 0.75rem;
  border-radius: 0.375rem;
  border: 1px solid #e5e7eb;
  background: white;
  font-size: 0.875rem;
  color: #4b5563;
  cursor: pointer;
  transition: all 0.2s;
}

.rarityButton:hover {
  background: #f3f4f6;
}

.rarityButton.active {
  background: #8b5cf6;
  color: white;
  border-color: #8b5cf6;
}

.sortButtons {
  display: flex;
  gap: 0.5rem;
  margin-left: auto;  /* 右寄せ */
}

.sortButton {
  padding: 0.25rem 0.75rem;
  border-radius: 0.375rem;
  border: 1px solid #e5e7eb;
  background: white;
  font-size: 0.875rem;
  color: #4b5563;
  cursor: pointer;
  transition: all 0.2s;
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.sortButton:hover {
  background: #f3f4f6;
}

.sortButton.active {
  background: #8b5cf6;
  color: white;
  border-color: #8b5cf6;
}

/* レア度に応じたスタイル - ！重要！ このスタイルが適用されないと色分けされません */
.rarityUR {
  background: linear-gradient(to right, rgba(255, 0, 0, 0.3), rgba(255, 128, 0, 0.3), rgba(255, 255, 0, 0.3), rgba(0, 255, 0, 0.3), rgba(0, 0, 255, 0.3), rgba(128, 0, 255, 0.3));
  border: 1px solid rgba(128, 0, 255, 0.3);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.raritySR {
  background: linear-gradient(to right, rgba(147, 51, 234, 0.3), rgba(236, 72, 153, 0.3), rgba(147, 51, 234, 0.3));
  border: 1px solid rgba(147, 51, 234, 0.3);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.rarityR {
  background: linear-gradient(to right, rgba(59, 130, 246, 0.3), rgba(6, 182, 212, 0.3), rgba(59, 130, 246, 0.3));
  border: 1px solid rgba(59, 130, 246, 0.3);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
}

.rarityN {
  background: linear-gradient(135deg, #f5f5f5, #e8e8e8, #f5f5f5);  /* より柔らかいグレー */
  border: 1px solid rgba(0, 0, 0, 0.05);
}

.unobtained {
  background: #d1d5db;  /* 未解放用のやや暗いグレー */
  opacity: 0.8;
}

/* バッジのスタイル - ！重要！ このスタイルが適用されないとバッジの色が変わりません */
.rarityBadgeUR {
  background-color: #FF6B00;  /* 鮮やかなオレンジ */
  color: white;
}

.rarityBadgeSR {
  background-color: #CC33FF;  /* 明るい紫 */
  color: white;
}

.rarityBadgeR {
  background-color: #3399FF;  /* 明るい青 */
  color: white;
}

.rarityBadgeN {
  background-color: #808080;  /* 標準的なグレー */
  color: white;
}

/* モーダルの背景色スタイル - ！重要！ このスタイルが適用されないとモーダルの色分けができません */
.modalContentUR {
  background: linear-gradient(135deg, #fff, #fff),
              linear-gradient(135deg, rgba(255, 0, 0, 0.15), rgba(255, 128, 0, 0.15), rgba(255, 255, 0, 0.15), rgba(0, 255, 0, 0.15), rgba(0, 0, 255, 0.15), rgba(128, 0, 255, 0.15));
  background-blend-mode: overlay;
}

.modalContentSR {
  background: linear-gradient(135deg, #fff, #fff),
              linear-gradient(135deg, rgba(147, 51, 234, 0.15), rgba(236, 72, 153, 0.15), rgba(147, 51, 234, 0.15));
  background-blend-mode: overlay;
}

.modalContentR {
  background: linear-gradient(135deg, #fff, #fff),
              linear-gradient(135deg, rgba(59, 130, 246, 0.15), rgba(6, 182, 212, 0.15), rgba(59, 130, 246, 0.15));
  background-blend-mode: overlay;
}

.modalContentN {
  background: linear-gradient(135deg, #fff, #fff),
              linear-gradient(135deg, rgba(156, 163, 175, 0.15), rgba(107, 114, 128, 0.15), rgba(156, 163, 175, 0.15));
  background-blend-mode: overlay;
}

.modalContentUnobtained {
  background: #fff;
}

/* モーダルコンテンツ内の要素がより見やすくなるよう調整 */
.modalContent .detailsSection {
  background: rgba(255, 255, 255, 0.9);
}
 
/* 画面サイズに応じた列数の制御 */
@media (min-width: 640px) {
  .grid {
    grid-template-columns: repeat(3, 180px);
  }
}

@media (min-width: 768px) {
  .grid {
    grid-template-columns: repeat(4, 180px);
  }
}

@media (min-width: 1024px) {
  .grid {
    grid-template-columns: repeat(5, 180px);
  }
}

@media (min-width: 1280px) {
  .grid {
    grid-template-columns: repeat(6, 180px);
  }
}

/* 獲得済みフィルター用のスタイル */
.obtainedFilter {
  display: flex;
  align-items: center;
}

.obtainedButton {
  padding: 0.25rem 0.75rem;
  border-radius: 0.375rem;
  border: 1px solid #e5e7eb;
  background: white;
  font-size: 0.875rem;
  color: #4b5563;
  cursor: pointer;
  transition: all 0.2s;
  font-weight: 500;
  display: flex;
  align-items: center;
}

.obtainedButton:hover {
  background: #f3f4f6;
}

.obtainedButton.active {
  background: #10B981; /* 緑色を使用して「獲得済み」であることを視覚的に示す */
  color: white;
  border-color: #10B981;
}

/* ローディング関連の改善スタイル */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 70vh;
  width: 100%;
  text-align: center;
  padding: 2rem;
  background: linear-gradient(to bottom, #EFF6FF, #F5F3FF);
}

.loadingSpinnerWrapper {
  position: relative;
  width: 80px;
  height: 80px;
  margin-bottom: 1.5rem;
}

.loadingSpinner {
  width: 80px;
  height: 80px;
  border: 5px solid rgba(139, 92, 246, 0.3);
  border-radius: 50%;
  border-top-color: #8B5CF6;
  animation: spin 1.2s ease-in-out infinite;
  position: absolute;
  top: 0;
  left: 0;
}

.loadingIconContainer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.loadingIcon {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.loadingText {
  font-size: 1.2rem;
  font-weight: 600;
  color: #6366F1;
  margin-bottom: 0.5rem;
}

.loadingSubtext {
  color: #6B7280;
  font-size: 0.9rem;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* エラー表示関連のスタイル */
.errorContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 70vh;
  width: 100%;
  text-align: center;
  padding: 2rem;
  background: #FEF2F2;
  color: #B91C1C;
  border-radius: 0.5rem;
}

.errorIcon {
  color: #EF4444;
  margin-bottom: 1rem;
}

.retryButton {
  margin-top: 1.5rem;
  padding: 0.5rem 1rem;
  background-color: #EF4444;
  color: white;
  border: none;
  border-radius: 0.375rem;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s;
}

.retryButton:hover {
  background-color: #DC2626;
}

/* ログイン促進バナー */
.loginBanner {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: linear-gradient(135deg, #EFF6FF, #F5F3FF);
  border: 1px solid #E2E8F0;
  padding: 1rem 1.5rem;
  border-radius: 0.75rem;
  margin-bottom: 1.5rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.loginMessage {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.loginIcon {
  color: #8B5CF6;
}

.loginTitle {
  font-weight: 600;
  font-size: 1.1rem;
  margin: 0 0 0.25rem 0;
  color: #1F2937;
}

.loginDescription {
  color: #6B7280;
  margin: 0;
  font-size: 0.875rem;
}

.loginButton {
  background-color: #8B5CF6;
  color: white;
  font-weight: 500;
  padding: 0.5rem 1.5rem;
  border: none;
  border-radius: 0.375rem;
  cursor: pointer;
  transition: all 0.2s;
  white-space: nowrap;
}

.loginButton:hover {
  background-color: #7C3AED;
  transform: translateY(-1px);
}

/* 無効な状態のボタン */
/* button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
} */

.sortButton:disabled,
.obtainedButton:disabled,
.loginButton:disabled,
.retryButton:disabled,
.resetButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}


/* 未ログイン状態のパロットカード */
.parrotCard.notLoggedIn {
  position: relative;
  cursor: pointer; /* 未ログイン時でもクリック可能に（ログイン促す） */
  opacity: 0.7;
}

.lockOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.1);
  border-radius: 0.75rem;
}

.lockIcon {
  color: rgba(255, 255, 255, 0.8);
  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.3));
}

/* 検索結果なしの表示 */
.noResults {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3rem 1rem;
  text-align: center;
  color: #6B7280;
}

.noResults p {
  margin: 1rem 0;
}

.resetButton {
  padding: 0.5rem 1rem;
  background-color: #8B5CF6;
  color: white;
  border: none;
  border-radius: 0.375rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;
}

.resetButton:hover {
  background-color: #7C3AED;
}

/* ページネーション用のスタイル */
.paginationContainer {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  margin: 1.5rem 0;
  padding: 0.75rem 1rem;
  background: white;
  border-radius: 0.5rem;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  gap: 1rem;
}

.paginationInfo {
  color: #6B7280;
  font-size: 0.875rem;
}

.paginationControls {
  display: flex;
  gap: 0.25rem;
  flex-wrap: wrap;
  justify-content: center;
}

.paginationButton {
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 2rem;
  height: 2rem;
  padding: 0 0.5rem;
  background: white;
  border: 1px solid #E5E7EB;
  border-radius: 0.25rem;
  font-size: 0.875rem;
  color: #4B5563;
  cursor: pointer;
  transition: all 0.2s;
}

.paginationButton:hover:not(.disabled) {
  background: #F3F4F6;
  border-color: #D1D5DB;
}

.paginationButton.active {
  background: #8B5CF6;
  color: white;
  border-color: #8B5CF6;
}

.paginationButton.disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.itemsPerPageSelector {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: #6B7280;
  font-size: 0.875rem;
}

.itemsPerPageSelect {
  padding: 0.25rem 0.5rem;
  border: 1px solid #E5E7EB;
  border-radius: 0.25rem;
  background: white;
  font-size: 0.875rem;
  color: #4B5563;
}

/* モバイル用のレスポンシブ対応 */
@media (max-width: 768px) {
  .paginationContainer {
    flex-direction: column;
    gap: 0.75rem;
  }
  
  .paginationInfo, 
  .paginationControls, 
  .itemsPerPageSelector {
    width: 100%;
    justify-content: center;
    text-align: center;
  }
}
